---
- name: Include GCP variables
  include_vars: gcp.yml
  tags:
    - gcp

- block:
  - name: "install Stackdriver collectd agent (check install status)"
    command: rpm -q --quiet stackdriver-agent
    register: collectd_installed
    failed_when:
      - collectd_installed.rc != 0
      - collectd_installed.rc != 1
    changed_when: false
  - name: "install Stackdriver collectd agent (download install script)"
    get_url:
      url: https://repo.stackdriver.com/stack-install.sh
      dest: /root/
    changed_when: false
    when: collectd_installed.rc == 1
  - name: "install Stackdriver collectd agent (run install script)"
    shell: |
      bash /root/stack-install.sh --write-gcm
      rm /root/stack-install.sh
    when: collectd_installed.rc == 1
  tags:
    - gcp

- block:
  - name: "install Stackdriver fluentd agent (check install status)"
    command: rpm -q --quiet google-fluentd
    register: fluentd_installed
    failed_when:
      - fluentd_installed.rc != 0
      - fluentd_installed.rc != 1
    changed_when: false
  - name: "install Stackdriver fluentd agent (download install script)"
    get_url:
      url: https://dl.google.com/cloudagents/install-logging-agent.sh
      dest: /root/
    changed_when: false
    when: fluentd_installed.rc == 1
  - name: "install Stackdriver fluentd agent (run install script)"
    shell: |
      bash /root/install-logging-agent.sh
      rm /root/install-logging-agent.sh
    when: fluentd_installed.rc == 1
  tags:
    - gcp


- name: "install Google Cloud SDK"
  yum:
    name: google-cloud-sdk
  tags:
    - gcp

- block:
  - name: update NTP servers (remove Google addresses)
    lineinfile:
      create: yes
      dest: /etc/ntp.conf
      state: absent
      regexp: '^\s*server\s+(?!({{ ntp_servers.0 }}|{{ ntp_servers.1 }})).*$'
  - name: update NTP Servers (add custom addresses)
    lineinfile:
      create: yes
      dest: /etc/ntp.conf
      state: present
      line: "server {{ item }} iburst"
    loop: "{{ ntp_servers }}"
  - name: update NTP servers (stop DHCP overwriting ntp.conf)
    file:
      path: /etc/dhcp/dhclient.d/ntp.sh
      state: absent
  tags:
    - gcp
    - fix
    - ntp

- block:
  - name: update DNS resolvers (remove undesired name servers)
    lineinfile:
      create: yes
      dest: /etc/resolv.conf
      state: absent
      regexp: '^\s*nameserver\s+(?!({{ dns_servers.0 }}|{{ dns_servers.1 }}|{{ dns_servers.2 }})).*$'
  - name: update DNS resolvers (remove undesired search domains)
    lineinfile:
      create: yes
      dest: /etc/resolv.conf
      state: absent
      regexp: '^\s*search\s+(?!{{ dns_domains }}).*$'
  - name: update DNS resolvers (add custom nameservers)
    lineinfile:
      create: yes
      dest: /etc/resolv.conf
      state: present
      regexp: '^\s*nameserver\s+{{ item }}.*$'
      line: "nameserver {{ item }}"
    loop: "{{ dns_servers }}"
  - name: update DNS resolvers (add custom domain)
    lineinfile:
      create: yes
      dest: /etc/resolv.conf
      state: present
      regexp: '^\s*search\s+{{ dns_domains }}(.*)$'
      line: 'search {{ dns_domains }}\1'
      backrefs: yes
  - name: update DNS resolvers (set changes to persist over reboot)
    lineinfile:
      create: yes
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: 'DNS{{ item.0 + 1 }}={{ item.1 }}'
    with_indexed_items:
      - "{{ dns_servers }}"
  - name: update DNS domains (set changes to persist over reboot)
    lineinfile:
      create: yes
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: 'DOMAIN="{{ dns_domains }}"'
  tags:
    - fix
    - gcp
    - dns

- name: If using a network proxy, never proxy requests to the Google metadata server
  lineinfile:
    path: /etc/profile.d/google-metadata.sh
    backup: yes
    owner: root
    group: root
    mode: 0644
    create: yes
    line: 'export no_proxy=169.254.169.254,metadata,metadata.google.internal'
  when: google_api_proxy is defined
  tags:
    - fix
    - gcp

- block:
  - name: Configure Stackdriver Logging (list unwanted files)
    find:
      paths: "/etc/google-fluentd/config.d"
      patterns: '^(?=.*\.conf)((?!(syslog|forward|audit)\.conf)).*$'
      use_regex: True
    register: stackdriver_config
  - name: Configure Stackdriver Logging (create google-fluent directory)
    file:
      path: /etc/google-fluentd/config.d
      state: directory
      mode: u=rwx,g=rx
    when: stackdriver_config.examined == 0
  - name: Configure Stackdriver Logging (delete unwanted files)
    file:
      path: "{{ item.path }}"
      state: absent
    loop: "{{ stackdriver_config.files }}"
    notify: reload fluentd
    when: stackdriver_config is defined
  - name: Configure Stackdriver Logging (setup OS auditing)
    template:
      src: stackdriver_audit.conf.j2
      dest: /etc/google-fluentd/config.d/audit.conf
      backup: yes
      owner: root
      group: root
      mode: 0640
    notify: reload fluentd
  - name: Configure Stackdriver Logging (use a network proxy)
    blockinfile:
      path: /etc/sysconfig/google-fluentd
      backup: yes
      owner: root
      group: root
      mode: 0640
      create: yes
      block: |
        export HTTP_PROXY=http://{{ google_api_proxy }}:{{ google_api_proxy_port | default(80) }}
        export HTTPS_PROXY=http://{{ google_api_proxy }}:{{ google_api_proxy_port | default(80) }}
        export no_proxy=169.254.169.254,metadata,metadata.google.internal
    when: google_api_proxy is defined
    notify: reload fluentd
  tags:
    - gcp
    - fix
    - logging

- name: Setup application logging to Stackdriver
  template:
    src: stackdriver_app_log.conf.j2
    dest: /etc/google-fluentd/config.d/{{ log_name }}.conf
    backup: yes
    owner: root
    group: root
    mode: 0640
  notify: reload fluentd
  tags:
    - gcp
    - fix
    - app_log
  when: log_name is defined

- block:
  - name: Configure Stackdriver Monitoring (reconfigure proxy)
    lineinfile:
      path: /etc/sysconfig/stackdriver
      backup: yes
      owner: root
      group: root
      mode: 0640
      create: yes
      regexp: '^\S*PROXY_URL=".+"$'
      line: 'PROXY_URL="http://{{ google_api_proxy }}:{{ google_api_proxy_port | default(80) }}"'
      backrefs: yes
    register: stackdriver_proxy
    when: google_api_proxy is defined
    notify: reload stackdriver-agent
  - name: Configure Stackdriver Monitoring (add proxy)
    lineinfile:
      path: /etc/sysconfig/stackdriver
      backup: yes
      owner: root
      group: root
      mode: 0640
      create: yes
      regexp: '^\S*PROXY_URL=""$'
      line: 'PROXY_URL="http://{{ google_api_proxy }}:{{ google_api_proxy_port | default(80) }}"'
      backrefs: yes
    when:
    - google_api_proxy is defined
    - stackdriver_proxy.changed == false
    notify: reload stackdriver-agent

  tags:
    - gcp
    - fix
    - monitoring

- name: "Allow packet redirect receiving is enabled for configured gateways"
  sysctl:
    sysctl_file: '/etc/sysctl.d/{{ item.key }}.conf'
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
    reload: yes
    ignoreerrors: yes
  with_dict:
    net.ipv4.conf.all.secure_redirects: 1
    net.ipv4.conf.default.secure_redirects: 1
  tags:
    - gcp
    - fix