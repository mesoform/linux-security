---
- name: Include GCP variables
  include_vars: gcp.yml
  tags:
    - gcp

- block:
  - name: "install Stackdriver agent"
    get_url:
      url: https://repo.stackdriver.com/stack-install.sh
      dest: /root/
    changed_when: false

  - get_url:
      url: https://dl.google.com/cloudagents/install-logging-agent.sh
      dest: /root/
    changed_when: false

  - shell: |
      bash /root/stack-install.sh --write-gcm
      bash /root/install-logging-agent.sh
      rm /root/stack-install.sh
      rm /root/install-logging-agent.sh
    changed_when: false

  tags:
    - gcp

- name: "install Google Cloud SDK"
  yum:
    name: google-cloud-sdk
  tags:
    - gcp

- block:
  - name: update NTP servers (remove Google addresses)
    lineinfile:
      dest: /etc/ntp.conf
      state: absent
      regexp: '^\s*server\s+(?!({{ ntp_servers.0 }}|{{ ntp_servers.1 }})).*$'
  - name: update NTP Servers (add custom addresses)
    lineinfile:
      dest: /etc/ntp.conf
      state: present
      line: "server {{ item }} iburst"
    with_items:
      - "{{ ntp_servers }}"
  - name: update NTP servers (stop DHCP overwriting ntp.conf)
    file:
      path: /etc/dhcp/dhclient.d/ntp.sh
      state: absent
  tags:
    - gcp
    - fix
    - ntp

- block:
  - name: update DNS resolvers (remove undesired name servers)
    lineinfile:
      dest: /etc/resolv.conf
      state: absent
      regexp: '^\s*nameserver\s+(?!({{ dns_servers.0 }}|{{ dns_servers.1 }}|{{ dns_servers.2 }})).*$'
  - name: update DNS resolvers (remove undesired search domains)
    lineinfile:
      dest: /etc/resolv.conf
      state: absent
      regexp: '^\s*search\s+(?!{{ dns_domains }}).*$'
  - name: update DNS resolvers (add custom nameservers)
    lineinfile:
      dest: /etc/resolv.conf
      state: present
      regexp: '^\s*nameserver\s+{{ item }}.*$'
      line: "nameserver {{ item }}"
    with_items:
      - "{{ dns_servers }}"
  - name: update DNS resolvers (add custom domain)
    lineinfile:
      dest: /etc/resolv.conf
      state: present
      regexp: '^\s*search\s+{{ dns_domains }}.*$'
      line: "search {{ dns_domains }}"
  - name: update DNS resolvers (set changes to persist over reboot)
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: 'DNS{{ item.0 }}={{ item.1 }}'
    with_indexed_items:
      - "{{ dns_servers }}"
  - name: update DNS domains (set changes to persist over reboot)
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: 'DOMAIN={{ dns_domains }}'
  tags:
    - fix
    - gcp
    - dns

- block:
  - name: Configure Stackdriver Logging (list unwanted files)
    find:
      paths: "/etc/google-fluentd/config.d"
      patterns: '^(?=.*\.conf)((?!(syslog|forward|audit)\.conf)).*$'
      use_regex: True
    register: stackdriver_config
  - name: Configure Stackdriver Logging (create google-fluent directory)
    file:
      path: /etc/google-fluentd/config.d
      state: directory
      mode: u=rwx,g=rx
    when: stackdriver_config.examined == 0
  - name: Configure Stackdriver Logging (delete unwanted files)
    file:
      path: "{{ item.path }}"
      state: absent
    with_items:
      - "{{ stackdriver_config.files }}"
    notify: reload fluentd
    when: stackdriver_config is defined
  - name: Configure Stackdriver Logging (setup OS auditing)
    template:
      src: stackdriver_audit_log.conf.j2
      dest: /etc/google-fluentd/config.d/audit.conf
      backup: yes
      owner: root
      group: root
      mode: 0640
    notify: reload fluentd
  tags:
    - gcp
    - fix
    - logging

- name: Setup application logging to Stackdriver
  template:
    src: stackdriver_app_log.conf.j2
    dest: /etc/google-fluentd/config.d/{{ log_name }}.conf
    backup: yes
    owner: root
    group: root
    mode: 0640
  notify: reload fluentd
  tags:
    - gcp
    - fix
    - app_log
  when: log_name is defined
